import { testAdapters, countArrangements } from "./10";

it("simple 1a/2", () => {
  expect(
    testAdapters(
      `16
      10
      15
      5
      1
      11
      7
      19
      6
      12
      4`
    )
  ).toBe(35);
});

it("simple 1b/2", () => {
  expect(
    testAdapters(
      `28
      33
      18
      42
      31
      14
      46
      20
      48
      47
      24
      23
      49
      45
      19
      38
      39
      11
      1
      32
      25
      35
      8
      17
      7
      9
      4
      2
      34
      10
      3`
    )
  ).toBe(220);
});

it("solution 1/2", () => {
  expect(
    testAdapters(
      `48
      171
      156
      51
      26
      6
      80
      62
      65
      82
      130
      97
      49
      31
      142
      83
      75
      20
      154
      119
      56
      114
      92
      33
      140
      74
      118
      1
      96
      44
      128
      134
      121
      64
      158
      27
      17
      101
      59
      12
      89
      88
      145
      167
      11
      3
      39
      43
      105
      16
      170
      63
      111
      2
      108
      21
      146
      77
      45
      52
      32
      127
      147
      76
      58
      37
      86
      129
      57
      133
      120
      163
      138
      161
      139
      71
      9
      141
      168
      164
      124
      157
      95
      25
      38
      69
      87
      155
      135
      15
      102
      70
      34
      42
      24
      50
      68
      169
      10
      55
      117
      30
      81
      151
      100
      162
      148`
    )
  ).toBe(2475);
});

it("simple 2a/2", () => {
  expect(
    countArrangements(
      `16
      10
      15
      5
      1
      11
      7
      19
      6
      12
      4`
    )
  ).toBe(8);
});

it("simple 2b/2", () => {
  expect(
    countArrangements(
      `28
      33
      18
      42
      31
      14
      46
      20
      48
      47
      24
      23
      49
      45
      19
      38
      39
      11
      1
      32
      25
      35
      8
      17
      7
      9
      4
      2
      34
      10
      3`
    )
  ).toBe(19208);
});

it("solution 2/2", () => {
  expect(
    countArrangements(
      `48
      171
      156
      51
      26
      6
      80
      62
      65
      82
      130
      97
      49
      31
      142
      83
      75
      20
      154
      119
      56
      114
      92
      33
      140
      74
      118
      1
      96
      44
      128
      134
      121
      64
      158
      27
      17
      101
      59
      12
      89
      88
      145
      167
      11
      3
      39
      43
      105
      16
      170
      63
      111
      2
      108
      21
      146
      77
      45
      52
      32
      127
      147
      76
      58
      37
      86
      129
      57
      133
      120
      163
      138
      161
      139
      71
      9
      141
      168
      164
      124
      157
      95
      25
      38
      69
      87
      155
      135
      15
      102
      70
      34
      42
      24
      50
      68
      169
      10
      55
      117
      30
      81
      151
      100
      162
      148`
    )
  ).toBe(442136281481216);
});
